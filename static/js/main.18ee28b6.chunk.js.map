{"version":3,"sources":["components/Reader/Publication.jsx","components/Reader/Counter.jsx","components/Reader/Controls/ControlsStyled.js","components/Reader/Controls/Controls.jsx","components/Reader/Reader.jsx","components/App/App.jsx","index.js"],"names":["Article","styled","article","ArcticleH1","h1","ArcticleP","p","Publication","items","page","className","title","text","CounterP","div","Counter","length","ControlsSection","section","ControlsButton","button","Controls","handleChangePage","type","onClick","disabled","name","Reader","state","target","setState","prevState","this","props","ReaderDiv","Component","App","publications","ReactDOM","render","document","getElementById"],"mappings":"u1hBAIA,IAkBMA,EAAUC,IAAOC,QAAV,KAQPC,EAAaF,IAAOG,GAAV,KAKVC,EAAYJ,IAAOK,EAAV,KAMAC,EArCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OAClB,kBAACT,EAAD,CAASU,UAAU,eACjB,kBAACP,EAAD,KAAaK,EAAMC,GAAME,OACzB,kBAACN,EAAD,KAAYG,EAAMC,GAAMG,Q,iLCH5B,IAiBMC,EAAWZ,IAAOa,IAAV,KAQCC,EAzBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACd,kBAACI,EAAD,CAAUH,UAAU,WACjBD,EAAO,EADV,IACcD,EAAMQ,S,isBCJf,IAAMC,EAAkBhB,IAAOiB,QAAV,KAKfC,EAAiBlB,IAAOmB,OAAV,KCgCZC,EAnCE,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMa,EAAhB,EAAgBA,iBAAhB,OACf,kBAACL,EAAD,CAAiBP,UAAU,YACzB,kBAACS,EAAD,CACEI,KAAK,SACLC,QAASF,EACTZ,UAAU,SACVe,UAAWhB,EACXiB,KAAK,QALP,kCASA,kBAACP,EAAD,CACEI,KAAK,SACLC,QAASF,EACTZ,UAAU,SACVe,SAAUhB,IAASD,EAAMQ,OAAS,EAClCU,KAAK,QALP,0C,6ICRiBC,E,2MACnBC,MAAQ,CAAEnB,KAAM,G,EAEhBa,iBAAmB,YAAiB,IAAdO,EAAa,EAAbA,OACpB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,KAAMsB,EAAUtB,MAAwB,SAAhBoB,EAAOH,KAAkB,GAAK,Q,wEAIhD,IACAlB,EAAUwB,KAAKC,MAAfzB,MACAC,EAASuB,KAAKJ,MAAdnB,KACR,OACE,kBAACyB,EAAD,CAAWxB,UAAU,UACnB,kBAAC,EAAD,CAAaF,MAAOA,EAAOC,KAAMA,IACjC,kBAAC,EAAD,CAASD,MAAOA,EAAOC,KAAMA,IAC7B,kBAAC,EAAD,CACED,MAAOA,EACPC,KAAMA,EACNa,iBAAkBU,KAAKV,wB,GAnBGa,aAmC9BD,EAAYjC,IAAOa,IAAV,K,QCnCAsB,EAFH,kBAAM,kBAAC,EAAD,CAAQ5B,MAAO6B,KCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.18ee28b6.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst Publication = ({ items, page }) => (\n  <Article className=\"publication\">\n    <ArcticleH1>{items[page].title}</ArcticleH1>\n    <ArcticleP>{items[page].text}</ArcticleP>\n  </Article>\n);\n\nPublication.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      text: PropTypes.string,\n    }),\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nconst Article = styled.article`\n  padding: 24px;\n  height: 400px;\n  border: 1px none #e6ecf1;\n  border-radius: 2px;\n  background-color: #fff;\n  box-shadow: 0 6px 28px 0 rgba(24, 52, 117, 0.2);\n`;\nconst ArcticleH1 = styled.h1`\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\nconst ArcticleP = styled.p`\n  font-weight: 300;\n  line-height: 1.5;\n  margin-bottom: 0;\n`;\n\nexport default Publication;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({ items, page }) => (\n  <CounterP className=\"counter\">\n    {page + 1}/{items.length}\n  </CounterP>\n);\n\nCounter.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      text: PropTypes.string,\n    }),\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nconst CounterP = styled.div`\n  text-align: center;\n  font-weight: 400;\n  font-size: 20px;\n  margin-bottom: 0;\n  margin-top: 16px;\n`;\n\nexport default Counter;\n","import styled from '@emotion/styled';\n\nexport const ControlsSection = styled.section`\n  display: flex;\n  justify-content: center;\n  margin-top: 16px;\n`;\nexport const ControlsButton = styled.button`\ndisplay: inline-block;\nmin-width: 240px;\nborder: 0\npadding: 8px 16px;\nmargin-left: 4px;\nmargin-right: 4px;\nborder-radius: 3px;\nbackground-color: #3884ff;\ntransition: all 200ms ease;\nfont-family: inherit;\nfont-size: 16px;\nfont-weight: 500;\nline-height: 24px;\nfont-style: normal;\ntext-align: center;\ntext-decoration: none;\ncolor: #fff;\ncursor: pointer;\n&[disabled] {\n  pointer-events: none;\n  background-color: #bdbdbd;\n}\n&:hover,\n&:focus {\n  background-color: #1f65d6;\n}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ControlsSection, ControlsButton } from './ControlsStyled.js';\n\nconst Controls = ({ items, page, handleChangePage }) => (\n  <ControlsSection className=\"controls\">\n    <ControlsButton\n      type=\"button\"\n      onClick={handleChangePage}\n      className=\"button\"\n      disabled={!page}\n      name=\"prev\"\n    >\n      Назад\n    </ControlsButton>\n    <ControlsButton\n      type=\"button\"\n      onClick={handleChangePage}\n      className=\"button\"\n      disabled={page === items.length - 1}\n      name=\"next\"\n    >\n      Вперед\n    </ControlsButton>\n  </ControlsSection>\n);\n\nControls.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      text: PropTypes.string,\n    }),\n  ).isRequired,\n  page: PropTypes.number.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport Publication from './Publication';\nimport Counter from './Counter';\nimport Controls from './Controls/Controls';\n\nexport default class Reader extends Component {\n  state = { page: 0 };\n\n  handleChangePage = ({ target }) => {\n    this.setState(prevState => ({\n      page: prevState.page + (target.name === 'next' ? 1 : -1),\n    }));\n  };\n\n  render() {\n    const { items } = this.props;\n    const { page } = this.state;\n    return (\n      <ReaderDiv className=\"reader\">\n        <Publication items={items} page={page} />\n        <Counter items={items} page={page} />\n        <Controls\n          items={items}\n          page={page}\n          handleChangePage={this.handleChangePage}\n        />\n      </ReaderDiv>\n    );\n  }\n}\nReader.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      text: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nconst ReaderDiv = styled.div`\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from 'react';\nimport './styles.css';\nimport Reader from '../Reader/Reader';\nimport publications from '../../DB/publications.json';\n\nconst App = () => <Reader items={publications} />;\n\nexport default App;\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}